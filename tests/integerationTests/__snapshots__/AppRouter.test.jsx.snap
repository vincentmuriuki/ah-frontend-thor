// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AppRouter /> tests the footer of the app against the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppRouter />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <BrowserRouter>
        <React.Fragment>
          <Root>
            <div>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/login"
              />
              <Route
                component={[Function]}
                path="/signup"
              />
              <Route
                component={[Function]}
                path="/home"
              />
              <Route
                component={[Function]}
                path="/forgot_password"
              />
              <Route
                component={[Function]}
                path="/update_password"
              />
              <Route
                component={[Function]}
                path="/profile"
              />
              <Route
                component={[Function]}
                path="/editprofile"
              />
              <Route
                component={[Function]}
                path="/signout"
              />
              <Route
                component={[Function]}
                path="/post_article"
              />
              <Route
                component={[Function]}
                path="/updateuser"
              />
              <Route
                component={[Function]}
                path="/article"
              />
              <Route
                component={[Function]}
                path="/searchresults/:type/:searchData"
              />
              <Route
                component={[Function]}
                path="/bookmarkslist"
              />
              <Route
                component={[Function]}
                path="/edit_article/:id"
              />
            </div>
          </Root>
        </React.Fragment>
      </BrowserRouter>,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <React.Fragment>
          <Root>
            <div>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/login"
              />
              <Route
                component={[Function]}
                path="/signup"
              />
              <Route
                component={[Function]}
                path="/home"
              />
              <Route
                component={[Function]}
                path="/forgot_password"
              />
              <Route
                component={[Function]}
                path="/update_password"
              />
              <Route
                component={[Function]}
                path="/profile"
              />
              <Route
                component={[Function]}
                path="/editprofile"
              />
              <Route
                component={[Function]}
                path="/signout"
              />
              <Route
                component={[Function]}
                path="/post_article"
              />
              <Route
                component={[Function]}
                path="/updateuser"
              />
              <Route
                component={[Function]}
                path="/article"
              />
              <Route
                component={[Function]}
                path="/searchresults/:type/:searchData"
              />
              <Route
                component={[Function]}
                path="/bookmarkslist"
              />
              <Route
                component={[Function]}
                path="/edit_article/:id"
              />
            </div>
          </Root>
        </React.Fragment>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Root>
            <div>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/login"
              />
              <Route
                component={[Function]}
                path="/signup"
              />
              <Route
                component={[Function]}
                path="/home"
              />
              <Route
                component={[Function]}
                path="/forgot_password"
              />
              <Route
                component={[Function]}
                path="/update_password"
              />
              <Route
                component={[Function]}
                path="/profile"
              />
              <Route
                component={[Function]}
                path="/editprofile"
              />
              <Route
                component={[Function]}
                path="/signout"
              />
              <Route
                component={[Function]}
                path="/post_article"
              />
              <Route
                component={[Function]}
                path="/updateuser"
              />
              <Route
                component={[Function]}
                path="/article"
              />
              <Route
                component={[Function]}
                path="/searchresults/:type/:searchData"
              />
              <Route
                component={[Function]}
                path="/bookmarkslist"
              />
              <Route
                component={[Function]}
                path="/edit_article/:id"
              />
            </div>
          </Root>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/login"
              />
              <Route
                component={[Function]}
                path="/signup"
              />
              <Route
                component={[Function]}
                path="/home"
              />
              <Route
                component={[Function]}
                path="/forgot_password"
              />
              <Route
                component={[Function]}
                path="/update_password"
              />
              <Route
                component={[Function]}
                path="/profile"
              />
              <Route
                component={[Function]}
                path="/editprofile"
              />
              <Route
                component={[Function]}
                path="/signout"
              />
              <Route
                component={[Function]}
                path="/post_article"
              />
              <Route
                component={[Function]}
                path="/updateuser"
              />
              <Route
                component={[Function]}
                path="/article"
              />
              <Route
                component={[Function]}
                path="/searchresults/:type/:searchData"
              />
              <Route
                component={[Function]}
                path="/bookmarkslist"
              />
              <Route
                component={[Function]}
                path="/edit_article/:id"
              />
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />,
                <Route
                  component={[Function]}
                  path="/login"
                />,
                <Route
                  component={[Function]}
                  path="/signup"
                />,
                <Route
                  component={[Function]}
                  path="/home"
                />,
                <Route
                  component={[Function]}
                  path="/forgot_password"
                />,
                <Route
                  component={[Function]}
                  path="/update_password"
                />,
                <Route
                  component={[Function]}
                  path="/profile"
                />,
                <Route
                  component={[Function]}
                  path="/editprofile"
                />,
                <Route
                  component={[Function]}
                  path="/signout"
                />,
                <Route
                  component={[Function]}
                  path="/post_article"
                />,
                <Route
                  component={[Function]}
                  path="/updateuser"
                />,
                <Route
                  component={[Function]}
                  path="/article"
                />,
                <Route
                  component={[Function]}
                  path="/searchresults/:type/:searchData"
                />,
                <Route
                  component={[Function]}
                  path="/bookmarkslist"
                />,
                <Route
                  component={[Function]}
                  path="/edit_article/:id"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/login",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/signup",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/home",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/forgot_password",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/update_password",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/profile",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/editprofile",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/signout",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/post_article",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/updateuser",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/article",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/searchresults/:type/:searchData",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/bookmarkslist",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/edit_article/:id",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        "type": Symbol(react.fragment),
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <BrowserRouter>
          <React.Fragment>
            <Root>
              <div>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  path="/signup"
                />
                <Route
                  component={[Function]}
                  path="/home"
                />
                <Route
                  component={[Function]}
                  path="/forgot_password"
                />
                <Route
                  component={[Function]}
                  path="/update_password"
                />
                <Route
                  component={[Function]}
                  path="/profile"
                />
                <Route
                  component={[Function]}
                  path="/editprofile"
                />
                <Route
                  component={[Function]}
                  path="/signout"
                />
                <Route
                  component={[Function]}
                  path="/post_article"
                />
                <Route
                  component={[Function]}
                  path="/updateuser"
                />
                <Route
                  component={[Function]}
                  path="/article"
                />
                <Route
                  component={[Function]}
                  path="/searchresults/:type/:searchData"
                />
                <Route
                  component={[Function]}
                  path="/bookmarkslist"
                />
                <Route
                  component={[Function]}
                  path="/edit_article/:id"
                />
              </div>
            </Root>
          </React.Fragment>
        </BrowserRouter>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(Symbol.observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <React.Fragment>
            <Root>
              <div>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  path="/signup"
                />
                <Route
                  component={[Function]}
                  path="/home"
                />
                <Route
                  component={[Function]}
                  path="/forgot_password"
                />
                <Route
                  component={[Function]}
                  path="/update_password"
                />
                <Route
                  component={[Function]}
                  path="/profile"
                />
                <Route
                  component={[Function]}
                  path="/editprofile"
                />
                <Route
                  component={[Function]}
                  path="/signout"
                />
                <Route
                  component={[Function]}
                  path="/post_article"
                />
                <Route
                  component={[Function]}
                  path="/updateuser"
                />
                <Route
                  component={[Function]}
                  path="/article"
                />
                <Route
                  component={[Function]}
                  path="/searchresults/:type/:searchData"
                />
                <Route
                  component={[Function]}
                  path="/bookmarkslist"
                />
                <Route
                  component={[Function]}
                  path="/edit_article/:id"
                />
              </div>
            </Root>
          </React.Fragment>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Root>
              <div>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  path="/signup"
                />
                <Route
                  component={[Function]}
                  path="/home"
                />
                <Route
                  component={[Function]}
                  path="/forgot_password"
                />
                <Route
                  component={[Function]}
                  path="/update_password"
                />
                <Route
                  component={[Function]}
                  path="/profile"
                />
                <Route
                  component={[Function]}
                  path="/editprofile"
                />
                <Route
                  component={[Function]}
                  path="/signout"
                />
                <Route
                  component={[Function]}
                  path="/post_article"
                />
                <Route
                  component={[Function]}
                  path="/updateuser"
                />
                <Route
                  component={[Function]}
                  path="/article"
                />
                <Route
                  component={[Function]}
                  path="/searchresults/:type/:searchData"
                />
                <Route
                  component={[Function]}
                  path="/bookmarkslist"
                />
                <Route
                  component={[Function]}
                  path="/edit_article/:id"
                />
              </div>
            </Root>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  path="/signup"
                />
                <Route
                  component={[Function]}
                  path="/home"
                />
                <Route
                  component={[Function]}
                  path="/forgot_password"
                />
                <Route
                  component={[Function]}
                  path="/update_password"
                />
                <Route
                  component={[Function]}
                  path="/profile"
                />
                <Route
                  component={[Function]}
                  path="/editprofile"
                />
                <Route
                  component={[Function]}
                  path="/signout"
                />
                <Route
                  component={[Function]}
                  path="/post_article"
                />
                <Route
                  component={[Function]}
                  path="/updateuser"
                />
                <Route
                  component={[Function]}
                  path="/article"
                />
                <Route
                  component={[Function]}
                  path="/searchresults/:type/:searchData"
                />
                <Route
                  component={[Function]}
                  path="/bookmarkslist"
                />
                <Route
                  component={[Function]}
                  path="/edit_article/:id"
                />
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/login"
                  />,
                  <Route
                    component={[Function]}
                    path="/signup"
                  />,
                  <Route
                    component={[Function]}
                    path="/home"
                  />,
                  <Route
                    component={[Function]}
                    path="/forgot_password"
                  />,
                  <Route
                    component={[Function]}
                    path="/update_password"
                  />,
                  <Route
                    component={[Function]}
                    path="/profile"
                  />,
                  <Route
                    component={[Function]}
                    path="/editprofile"
                  />,
                  <Route
                    component={[Function]}
                    path="/signout"
                  />,
                  <Route
                    component={[Function]}
                    path="/post_article"
                  />,
                  <Route
                    component={[Function]}
                    path="/updateuser"
                  />,
                  <Route
                    component={[Function]}
                    path="/article"
                  />,
                  <Route
                    component={[Function]}
                    path="/searchresults/:type/:searchData"
                  />,
                  <Route
                    component={[Function]}
                    path="/bookmarkslist"
                  />,
                  <Route
                    component={[Function]}
                    path="/edit_article/:id"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/login",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/signup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/home",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/forgot_password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/update_password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/profile",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/editprofile",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/signout",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/post_article",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/updateuser",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/article",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/searchresults/:type/:searchData",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/bookmarkslist",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/edit_article/:id",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          "type": Symbol(react.fragment),
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
